<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="optionsPage1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>